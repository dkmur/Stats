#!/bin/bash

source config.ini

# Create crontab file
cp crontab.txt.default crontab.txt
PATH_TO_STATS2=$(sed 's@/@\\/@g' <<< $PATH_TO_STATS)
cd $PATH_TO_STATS && sed -i "s/pathToStats/$PATH_TO_STATS2/g" *.txt
cd $PATH_TO_STATS && sed -i "s/STATS_DB/$STATS_DB/g" *.txt
cd $PATH_TO_STATS && sed -i "s/QMIN/$QUEST_CLEAN_MIN/g" *.txt
cd $PATH_TO_STATS && sed -i "s/QHR/$QUEST_CLEAN_HR/g" *.txt

if [ -z "$SQL_password" ]
then
  sed -i "s/userpass/-h$DB_IP -u$SQL_user/g" crontab.txt
else
  sed -i "s/userpass/-h$DB_IP -u$SQL_user -p$SQL_password/g" crontab.txt
fi

# Create Area files
cd $PATH_TO_STATS && cd sql_cron && rm *.sql
for area in "$PATH_TO_STATS"areas/*.ini
do
  echo "$area"
  source $area
  cp $PATH_TO_STATS/sql_cron/15_area.sql.default $PATH_TO_STATS/sql_cron/15_"$AREA_NAME"_area.sql
  sed -i "s/Alphen/$AREA_NAME/g" $PATH_TO_STATS/sql_cron/15_"$AREA_NAME"_area.sql
  sed -i "s/51.491/$MAX_LAT/g" $PATH_TO_STATS/sql_cron/15_"$AREA_NAME"_area.sql
  sed -i "s/51.471/$MIN_LAT/g" $PATH_TO_STATS/sql_cron/15_"$AREA_NAME"_area.sql
  sed -i "s/4.946/$MIN_LON/g" $PATH_TO_STATS/sql_cron/15_"$AREA_NAME"_area.sql
  sed -i "s/4.973/$MAX_LON/g" $PATH_TO_STATS/sql_cron/15_"$AREA_NAME"_area.sql
  cp $PATH_TO_STATS/sql_cron/60_area.sql.default $PATH_TO_STATS/sql_cron/60_"$AREA_NAME"_area.sql
  sed -i "s/Alphen/$AREA_NAME/g" $PATH_TO_STATS/sql_cron/60_"$AREA_NAME"_area.sql
  sed -i "s/51.491/$MAX_LAT/g" $PATH_TO_STATS/sql_cron/60_"$AREA_NAME"_area.sql
  sed -i "s/51.471/$MIN_LAT/g" $PATH_TO_STATS/sql_cron/60_"$AREA_NAME"_area.sql
  sed -i "s/4.946/$MIN_LON/g" $PATH_TO_STATS/sql_cron/60_"$AREA_NAME"_area.sql
  sed -i "s/4.973/$MAX_LON/g" $PATH_TO_STATS/sql_cron/60_"$AREA_NAME"_area.sql
  cp $PATH_TO_STATS/sql_cron/1440_area.sql.default $PATH_TO_STATS/sql_cron/1440_"$AREA_NAME"_area.sql
  sed -i "s/Alphen/$AREA_NAME/g" $PATH_TO_STATS/sql_cron/1440_"$AREA_NAME"_area.sql
  sed -i "s/51.491/$MAX_LAT/g" $PATH_TO_STATS/sql_cron/1440_"$AREA_NAME"_area.sql
  sed -i "s/51.471/$MIN_LAT/g" $PATH_TO_STATS/sql_cron/1440_"$AREA_NAME"_area.sql
  sed -i "s/4.946/$MIN_LON/g" $PATH_TO_STATS/sql_cron/1440_"$AREA_NAME"_area.sql
  sed -i "s/4.973/$MAX_LON/g" $PATH_TO_STATS/sql_cron/1440_"$AREA_NAME"_area.sql
done

# Create sql table and trigger files
cd $PATH_TO_STATS && cp tables.sql.default tables.sql
cd $PATH_TO_STATS && cp triggers.sql.default triggers.sql
cd $PATH_TO_STATS && sed -i "s/pogodb/$STATS_DB/g" *.sql

# Create cron files
cp $PATH_TO_STATS/sql_cron/15_area.sql.default $PATH_TO_STATS/sql_cron/15_area.sql.template
cp $PATH_TO_STATS/sql_cron/60_area.sql.default $PATH_TO_STATS/sql_cron/60_area.sql.template
cp $PATH_TO_STATS/sql_cron/1440_area.sql.default $PATH_TO_STATS/sql_cron/1440_area.sql.template
cp $PATH_TO_STATS/sql_cron/10080_area.sql.default $PATH_TO_STATS/sql_cron/10080_area.sql
cp $PATH_TO_STATS/sql_cron/15_worker.sql.default $PATH_TO_STATS/sql_cron/15_worker.sql
cp $PATH_TO_STATS/sql_cron/60_worker.sql.default $PATH_TO_STATS/sql_cron/60_worker.sql
cp $PATH_TO_STATS/sql_cron/1440_worker.sql.default $PATH_TO_STATS/sql_cron/1440_worker.sql
cp $PATH_TO_STATS/sql_cron/10080_worker.sql.default $PATH_TO_STATS/sql_cron/10080_worker.sql
cp $PATH_TO_STATS/sql_cron/pokemon_daily.sql.default $PATH_TO_STATS/sql_cron/pokemon_daily.sql
cp $PATH_TO_STATS/sql_cron/pokemon_hourly.sql.default $PATH_TO_STATS/sql_cron/pokemon_hourly.sql
cp $PATH_TO_STATS/sql_cron/quest_spawn_cleanup.sql.default $PATH_TO_STATS/sql_cron/quest_spawn_cleanup.sql
cd $PATH_TO_STATS && cd sql_cron/ && sed -i "s/pogodb/$STATS_DB/g" *.sql
cd $PATH_TO_STATS && cd sql_cron/ && sed -i "s/pogodb/$STATS_DB/g" *.template
cd $PATH_TO_STATS && cd sql_cron/ && sed -i "s/rmdb/$MAD_DB/g" *.sql
cd $PATH_TO_STATS && cd sql_cron/ && sed -i "s/rmdb/$MAD_DB/g" *.template
cd $PATH_TO_STATS && cd sql_cron/ && sed -i "s/RPL15/$RPL15/g" *.sql
cd $PATH_TO_STATS && cd sql_cron/ && sed -i "s/RPL60/$RPL60/g" *.sql
cd $PATH_TO_STATS && cd sql_cron/ && sed -i "s/RPL1440/$RPL1440/g" *.sql
cd $PATH_TO_STATS && cd sql_cron/ && sed -i "s/RPL10080/$RPL10080/g" *.sql
cd $PATH_TO_STATS && cd sql_cron/ && sed -i "s/queststart/$QUEST_START/g" *.sql
cd $PATH_TO_STATS && cd sql_cron/ && sed -i "s/questend/$QUEST_END/g" *.sql

# set MAD clean tables

if "$pokemon"
then sed -i "s/--pokemon--//g" $PATH_TO_STATS/sql_cron/pokemon_hourly.sql
fi

if "$trs_stats_detect_raw"
then sed -i "s/--detect_raw--//g" $PATH_TO_STATS/sql_cron/pokemon_hourly.sql
fi

if "$trs_stats_location_raw"
then sed -i "s/--location_raw--//g" $PATH_TO_STATS/sql_cron/pokemon_hourly.sql
fi

if "$trs_stats_detect"
then sed -i "s/--detect--//g" $PATH_TO_STATS/sql_cron/pokemon_daily.sql
fi

if "$trs_stats_location"
then sed -i "s/--location--//g" $PATH_TO_STATS/sql_cron/pokemon_daily.sql
fi

if "$trs_usage"
then sed -i "s/--usage--//g" $PATH_TO_STATS/sql_cron/pokemon_daily.sql
fi

# Create tables
if [ -z "$SQL_password" ]
then
  mysql -h$DB_IP -u$SQL_user $STATS_DB < $PATH_TO_STATS/tables.sql
else
  mysql -h$DB_IP -u$SQL_user -p$SQL_password $STATS_DB < $PATH_TO_STATS/tables.sql
fi

# Create triggers
if [ -z "$SQL_password" ]
then
  mysql -h$DB_IP -u$SQL_user $MAD_DB < $PATH_TO_STATS/triggers.sql
else
  mysql -h$DB_IP -u$SQL_user -p$SQL_password $MAD_DB < $PATH_TO_STATS/triggers.sql
fi

#Check MAD collation, else 15_worker will fail
table_check=$(mysql $MAD_DB -h$DB_IP -u$SQL_user -p$SQL_password -se "SELECT TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME, TABLE_COLLATION FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'rmdb' and (((TABLE_NAME = 'trs_stats_detect' or TABLE_NAME = 'trs_stats_location' or TABLE_NAME = 'trs_stats_loction_raw') and TABLE_COLLATION <>'utf8mb4_general_ci' ) or ((TABLE_NAME = 'trs_status' or TABLE_NAME = 'trs_stats_detect_mon_raw') and TABLE_COLLATION <> 'utf8mb4_unicode_ci'));")
column_check=$(mysql $MAD_DB -h$DB_IP -u$SQL_user -p$SQL_password -se "SELECT TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, COLLATION_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = 'rmdb' and (((TABLE_NAME = 'trs_stats_detect' or TABLE_NAME = 'trs_stats_location' or TABLE_NAME = 'trs_stats_loction_raw') and COLLATION_NAME <>'utf8mb4_general_ci' ) or ((TABLE_NAME = 'trs_status' or TABLE_NAME = 'trs_stats_detect_mon_raw') and COLLATION_NAME <> 'utf8mb4_unicode_ci'));")

echo 'Checking MAD collation'
echo ''
if [[ -z $table_check || -z $column_check ]]; then
  echo 'MAD table/column collation set correctly'
  else
  echo '(some) MAD table/column collation set incorrect'
  echo 'Check https://github.com/Map-A-Droid/MAD/tree/master/scripts/SQL and adapt accordingly'
  mysql $MAD_DB -h$DB_IP -u$SQL_user -p$SQL_password -se "SELECT TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME, TABLE_COLLATION FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'rmdb' and (((TABLE_NAME = 'trs_stats_detect' or TABLE_NAME = 'trs_stats_location' or TABLE_NAME = 'trs_stats_loction_raw') and TABLE_COLLATION <>'utf8mb4_general_ci' ) or ((TABLE_NAME = 'trs_status' or TABLE_NAME = 'trs_stats_detect_mon_raw') and TABLE_COLLATION <> 'utf8mb4_unicode_ci'));"
  mysql $MAD_DB -h$DB_IP -u$SQL_user -p$SQL_password -se "SELECT TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, COLLATION_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = 'rmdb' and (((TABLE_NAME = 'trs_stats_detect' or TABLE_NAME = 'trs_stats_location' or TABLE_NAME = 'trs_stats_loction_raw') and COLLATION_NAME <>'utf8mb4_general_ci' ) or ((TABLE_NAME = 'trs_status' or TABLE_NAME = 'trs_stats_detect_mon_raw') and COLLATION_NAME <> 'utf8mb4_unicode_ci'));"
fi
echo ''
